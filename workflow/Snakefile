######################################################################################################                   
######################################################################################################
######################################################################################################   
# BarlONT snakemake pipeline for data processing, assembly, polishing, variant calling 
# and analysis in barley using long-read nanopore and short-read illumina data
# Nikolaj M. Vendelbo 
#
#   ,ggggggggggg,                                   _,gggggg,_      ,ggg, ,ggggggg,   ,ggggggggggggggg
# dP"""88""""""Y8,                        ,dPYb, ,d8P""d8P"Y8b,   dP""Y8,8P"""""Y8b dP""""""88"""""""
#  Yb  88      `8b                        IP'`Yb,d8'   Y8   "8b,dPYb, `8dP'     `88 Yb,_    88       
#      88      ,8P                        I8  8Id8'    `Ybaaad88P' `"  88'       88  `""    88       
#      88aaaad8P"                         I8  8'8P       `""""Y8       88        88         88       
#      88""""Y8ba    ,gggg,gg   ,gggggg,  I8 dP 8b            d8       88        88         88       
#      88      `8b  dP"  "Y8I   dP""""8I  I8dP  Y8,          ,8P       88        88         88       
#      88      ,8P i8'    ,8I  ,8'    8I  I8P   `Y8,        ,8P'       88        88   gg,   88       
#      88_____,d8',d8,   ,d8b,,dP     Y8,,d8b,_  `Y8b,,__,,d8P'        88        Y8,   "Yb,,8P       
#     88888888P"  P"Y8888P"`Y88P      `Y88P'"Y88   `"Y8888P"'          88        `Y8     "Y8P'                                                                                                         
#
########################################################################################################
########################################################################################################   
########################################################################################################   

# Set configfile
configfile: "config/config.yaml"

# set minimum snakemake version #####
from snakemake.utils import min_version
min_version("8.16.0")

wrapper_ver = "v5.0.0"

# Load rules
include: "rules/00_common.smk"
include: "rules/01_fastp.smk"  
include: "rules/01_nanoqc.smk" 
include: "rules/01_nanoplot.smk" 
include: "rules/01_porechop.smk"
include: "rules/01_chopper.smk"
include: "rules/01_filtlong.smk"
include: "rules/02_flye.smk"
include: "rules/03_nextpolish.smk"
include: "rules/03_ntedit.smk"
include: "rules/04_bcftools.smk"
include: "rules/04_bwa_mem2.smk"
include: "rules/04_gatk.smk"
include: "rules/04_picard.smk"
include: "rules/04_samtools.smk"
include: "rules/04_sniffles2.smk"
include: "rules/04_minimap2.smk"
include: "rules/analysis_meryl.smk"
include: "rules/analysis_jellyfish.smk"
include: "rules/analysis_genomescope2.smk"
include: "rules/genomic_resources.smk" 
include: "rules/qc.smk"

rule all:
    input:
         expand(rules.bcftools_stats_gatk.output[0], sample=config["samples"]),
         expand(rules.bcftools_stats_sniffles2.output[0], sample=config["samples"]),
         expand(rules.busco.output[1], sample=config["samples"], type=["draft","polished"]),
         expand(rules.quast.output[1], sample=config["samples"], type=["draft","polished"]),
         expand(rules.merqury.output[1], sample=config["samples"], type=["draft","polished"]),
    resources:
        mem_mb=2000,
        runtime="1h"
    default_target: True